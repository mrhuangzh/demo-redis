<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!-- 继承spring boot工程 -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.2</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.demo.redis</groupId>
    <artifactId>demo-redis</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>demo-redis</name>
    <description>demo-redis</description>
    <!-- 父工程的打包方式须为 pom -->
    <packaging>pom</packaging>

    <!-- 模块说明，这里声明多个子模块 -->
    <modules>

    </modules>

    <!-- 版本号定义 -->
    <properties>
        <java.version>17</java.version>
        <maven.surefire.plugin.version>2.22.2</maven.surefire.plugin.version>
        <spring.boot.starter.version>2.6.2</spring.boot.starter.version>
        <spring.boot.starter.test.version>2.6.2</spring.boot.starter.test.version>
        <spring.boot.starter.web.version>2.6.2</spring.boot.starter.web.version>
        <spring.boot.devtools.version>2.6.2</spring.boot.devtools.version>
        <spring.boot.starter.data.redis.version>2.6.2</spring.boot.starter.data.redis.version>
        <redis.clients.jedis.version>4.0.0</redis.clients.jedis.version>
        <org.redisson.version>3.16.7</org.redisson.version>

    </properties>

    <!--dependencyManagement里只是声明依赖，并不实现引入，因此子项目需要显示的声明需要用的依赖。-->
    <!--如果不在子项目中声明依赖，是不会从父项目中继承下来的；-->
    <!--只有在子项目中写了该依赖项，并且没有指定具体版本，才会从父项目中继承该项，并且version和scope都读取自父pom;-->
    <!--另外如果子项目中指定了版本号，那么会使用子项目中指定的jar版本-->
    <dependencyManagement>
        <dependencies>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring.boot.starter.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring.boot.starter.test.version}</version>
                <scope>test</scope>
            </dependency>


            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring.boot.starter.web.version}</version>
            </dependency>

        </dependencies>

    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- 跳过 test 单元测试，子项目中不必重复添加即可跳过test-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
